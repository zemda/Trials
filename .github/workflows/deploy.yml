name: "Deploy Game"

env:
  GODOT_VERSION: 4.4
  GAME_NAME: Trials

on:
  workflow_dispatch:
  push:
    branches:
      - github
    paths:
      - 'src/**'

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build Game Exports
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.4
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Mark repository as safe
        run: git config --global --add safe.directory /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}

      - name: Generate Build Version
        id: version
        shell: bash
        run: |
          BUILD_DATE=$(date +"%Y%m%d")
          BUILD_NUMBER=$(date +"%H%M")
          BUILD_VERSION="v${BUILD_DATE}.${BUILD_NUMBER}"
          echo "build_version=$BUILD_VERSION" >> $GITHUB_OUTPUT
          sed -i "s/const VERSION = \".*\"/const VERSION = \"$BUILD_VERSION\"/" src/version_info.gd
          cat src/version_info.gd

      - name: Move export templates into position
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      
      - name: Create export directories
        run: mkdir -v -p exports/web-gh-pages exports/windows exports/linux exports/mac

      - name: Export Web for GitHub Pages
        run: godot -v --export-release --headless "Web" ../exports/web-gh-pages/index.html src/project.godot
      
      - name: Add CORS Service Worker
        run: |
          git clone https://github.com/gzuidhof/coi-serviceworker.git
          mv coi-serviceworker/coi-serviceworker.js exports/web-gh-pages/coi-serviceworker.js
          sed -i '3 i <script src="coi-serviceworker.js"></script>' exports/web-gh-pages/index.html
      
      - name: Create ZIP file for Web
        run: |
          apt-get update && apt-get install -y zip
          cd exports/web-gh-pages
          zip -r ../${{ env.GAME_NAME }}-Web.zip ./*
          cd ../..
          echo "Web ZIP file size:"
          du -sh exports/${{ env.GAME_NAME }}-Web.zip
      
      - name: Export Windows
        run: godot -v --export-release --headless "Windows Desktop" ../exports/windows/${{ env.GAME_NAME }}-Windows.exe src/project.godot
      
      - name: Export Linux
        run: godot -v --export-release --headless "Linux" ../exports/linux/${{ env.GAME_NAME }}-Linux.x86_64 src/project.godot
      
      - name: Export Mac
        run: godot -v --export-release --headless "macOS" ../exports/mac/${{ env.GAME_NAME }}-macOS.zip src/project.godot || echo "Mac export failed but continuing workflow"

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./exports/web-gh-pages
          name: github-pages

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.version.outputs.build_version }}
          name: "Release ${{ steps.version.outputs.build_version }}"
          artifacts: |
            exports/${{ env.GAME_NAME }}-Web.zip
            exports/windows/${{ env.GAME_NAME }}-Windows.exe
            exports/linux/${{ env.GAME_NAME }}-Linux.x86_64
            exports/mac/${{ env.GAME_NAME }}-macOS.zip
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
      
      - name: Download and setup Butler
        run: |
          apt-get update && apt-get install -y curl unzip
          curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default
          unzip butler.zip -d /usr/local/bin
          chmod +x /usr/local/bin/butler

      - name: Deploy to Itch.io
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
        run: |
          /usr/local/bin/butler login
          
          /usr/local/bin/butler push exports/${{ env.GAME_NAME }}-Web.zip bananeq/trials:web --userversion ${{ steps.version.outputs.build_version }}
          /usr/local/bin/butler push exports/windows bananeq/trials:windows --userversion ${{ steps.version.outputs.build_version }}
          /usr/local/bin/butler push exports/linux bananeq/trials:linux --userversion ${{ steps.version.outputs.build_version }}
          /usr/local/bin/butler push exports/mac bananeq/trials:mac --userversion ${{ steps.version.outputs.build_version }}

  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    name: Deploy to GitHub Pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
